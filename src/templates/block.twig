{% set type = block.type %}
{% set typeTabs = type.getFieldLayout().getTabs() %}
{% set hasTabs = typeTabs is not empty %}
{% set isParent = static and block.children.exists() or not static and type.childBlocks is not null and type.childBlocks is not empty %}
{% set collapsed = craft.app.plugins.getPlugin('neo').settings.collapseAllBlocks or block.collapsed %}
{% set blockId = block.id %}
{% set baseInputName = "#{handle}[blocks][#{blockId}]" %}

{% set blockAttributes = {
    class: [
        'ni_block',
        "ni_block--#{type.handle}",
        collapsed ? 'is-collapsed' : 'is-expanded',
        not hasTabs and not isParent ? 'is-empty',
        isParent ? 'is-parent',
    ],
    data: {
        'neo-b-id': blockId,
        'neo-b-name': "#{type.name}",
    },
} %}

{% set actionBtnLabel = "#{type.name} #{'Actions'|t('neo')}" %}
{% set actionMenuId = "neoblock-action-menu-#{blockId}" %}
{% set tabsBtnLabel = "#{type.name} #{'Tabs'|t('neo')}" %}
{% set tabsMenuId = "neoblock-tabs-menu-#{blockId}" %}

{% set actionBtnAttributes = {
    class: ['btn', 'settings', 'icon', 'menubtn'],
    type: 'button',
    role: 'button',
    title: 'Actions'|t('neo'),
    aria: {
        controls: actionMenuId,
        label: actionBtnLabel,
    },
    data: {
        'disclosure-trigger': true,
        'neo-b': "#{blockId}.button.actions",
    },
} %}

{% set tabsBtnAttributes = {
    type: 'button',
    role: 'button',
    title: 'Tabs'|t('neo'),
    aria: {
        controls: tabsMenuId,
        label: tabsBtnLabel,
    },
    data: {
        'disclosure-trigger': true,
        'neo-b': "#{blockId}.button.tabs",
    },
} %}

<div {{ attr(blockAttributes) }}>
    {{ hiddenInput("#{baseInputName}[type]", type.handle, {'data-neo-b': blockId ~ '.input.type'}) }}
    {{ hiddenInput("#{baseInputName}[enabled]", block.enabled ? '1' : '', {'data-neo-b': blockId ~ '.input.enabled'}) }}
    {{ hiddenInput("#{baseInputName}[level]", block.level, {'data-neo-b': blockId ~ '.input.level'}) }}
    {{ hiddenInput("#{handle}[sortOrder][]", blockId, {'data-neo-b': blockId ~ '.input.sortOrder'}) }}
    {% do view.registerDeltaName(baseInputName) %}

    <div class="ni_block_topbar" data-neo-b="{{ blockId }}.container.topbar">
        <div class="ni_block_topbar_left" data-neo-b="{{ blockId }}.container.topbarLeft">
            <div class="ni_block_topbar_item" data-neo-b="{{ blockId }}.select">
                <div class="checkbox block-checkbox" title="{{ "Select"|t('neo') }}" aria-label="{{ 'Select'|t('neo') }}"></div>
            </div>
            <div class="ni_block_topbar_item title clip-text">
                <span class="blocktype" data-neo-b="{{ blockId }}.select">{{ type.name }}</span>{#
                #}{% if block.hasErrors() %}<span data-icon="alert" aria-label="{{ 'Error'|t('neo') }}"></span>{% endif %}{#
                #}<span class="preview" data-neo-b="{{ blockId }}.container.preview">&nbsp;</span>
            </div>
        </div>
        <div class="ni_block_topbar_right" data-neo-b="{{ blockId }}.container.topbarRight">
            <div class="ni_block_topbar_item size-full tabs">
                {% if hasTabs or isParent %}
                    <div class="tabs_trigger" data-neo-b="{{ blockId }}.button.toggler"></div>
                {% endif %}
                {% if typeTabs|length > 1 %}
                    {% set hasErrors = false %}
                    <div class="tabs_inner" data-neo-b="{{ blockId }}.container.tabs">
                        {%- for tab in typeTabs -%}
                            {%- set tabHasErrors = (tab.getErrors()|length > 0) -%}
                            <a class="tab {{ loop.first ? ' is-selected' : '' }} {{ tabHasErrors ? ' has-errors' : '' }}"
                            data-neo-b="{{ blockId }}.button.tab"
                            data-neo-b-info="{{ tab.name }}">
                                {{ tab.name }}
                            </a>
                            {%- set hasErrors = (hasErrors or tabHasErrors) -%}
                        {%- endfor -%}
                    </div>
                    <div>
                        <button {{ attr(tabsBtnAttributes) }} class="tabs_btn menubtn{{ hasErrors ? ' has-errors' : '' }}">
                            {{ (typeTabs|first).name }}
                        </button>
                        <div id="{{ tabsMenuId }}" class="neo_block_tabs-menu menu menu--disclosure">
                            <ul>
                                {% for tab in typeTabs %}
                                    <li>
                                        <a class="{{ loop.first ? 'is-selected' : '' }}{{ tab.getErrors()|length > 0 ? ' has-errors' : '' }}"
                                        href="#"
                                        type="button"
                                        role="button"
                                        aria-label="{{ tab.name }}"
                                        data-neo-b="{{ blockId }}.button.tab"
                                        data-neo-b-info="{{ tab.name }}">
                                            {{ tab.name }}
                                        </a>
                                    </li>
                                {% endfor %}
                            </ul>
                        </div>
                    </div>
                {% endif %}
            </div>
            <div class="ni_block_topbar_item hidden" data-neo-b="{{ blockId }}.status">
                <div class="status off" title="{{ "Disabled"|t }}"></div>
            </div>
            <div class="ni_block_topbar_item block-settings">
                <div>
                    <button {{ attr(actionBtnAttributes) }}></button>
                    <div id="{{ actionMenuId }}" class="menu menu--disclosure" data-neo-b="{{ blockId }}.container.menu">
                        <ul class="padded">
                            {% if hasTabs or isParent %}
                                <li><a data-icon="collapse" data-action="collapse" href="#" type="button" role="button" aria-label="{{ 'Collapse'|t('neo') }}">{{ 'Collapse'|t('neo') }}</a></li>
                                <li class="hidden"><a data-icon="expand" data-action="expand" href="#" type="button" role="button" aria-label="{{ 'Expand'|t('neo') }}">{{ 'Expand'|t('neo') }}</a></li>
                            {% endif %}
                            <li><a data-icon="disabled" data-action="disable" href="#" type="button" role="button" aria-label="{{ 'Disable'|t('neo') }}">{{ 'Disable'|t('neo') }}</a></li>
                            <li class="hidden"><a data-icon="enabled" data-action="enable" href="#" type="button" role="button" aria-label="{{ 'Enable'|t('neo') }}">{{ 'Enable'|t('neo') }}</a></li>
                            <li class="hidden"><a data-icon="uarr" data-action="moveUp" href="#" type="button" role="button" aria-label="{{ 'Move up'|t('neo') }}">{{ 'Move up'|t('neo') }}</a></li>
                            <li class="hidden"><a data-icon="darr" data-action="moveDown" href="#" type="button" role="button" aria-label="{{ 'Move down'|t('neo') }}">{{ 'Move down'|t('neo') }}</a></li>
                        </ul>
                        <hr>
                        <ul class="padded">
                            <li><a data-icon="plus" data-action="add" href="#" type="button" role="button" aria-label="{{ 'Add block above'|t('neo') }}">{{ 'Add block above'|t('neo') }}</a></li>
                            <li><a data-icon="field" data-action="copy" href="#" type="button" role="button" aria-label="{{ 'Copy'|t('neo') }}">{{ 'Copy'|t('neo') }}</a></li>
                            <li><a data-icon="brush" data-action="paste" href="#" type="button" role="button" aria-label="{{ 'Paste'|t('neo') }}">{{ 'Paste'|t('neo') }}</a></li>
                            <li><a data-icon="share" data-action="duplicate" href="#" type="button" role="button" aria-label="{{ 'Clone'|t('neo') }}">{{ 'Clone'|t('neo') }}</a></li>
                        </ul>
                        <hr>
                        <ul class="padded">
                            <li><a class="error" data-icon="remove" data-action="delete" href="#" type="button" role="button" aria-label="{{ 'Delete'|t('neo') }}">{{ 'Delete'|t('neo') }}</a></li>
                        </ul>
                    </div>
                </div>
            </div>
            <div class="ni_block_topbar_item block-reorder">
                <a class="move icon" title="{{ 'Reorder'|t('neo') }}" aria-label="{{ 'Reorder'|t('neo') }}" role="button" data-neo-b="{{ blockId }}.button.move"></a>
            </div>
        </div>
    </div>
    {% if hasTabs or isParent %}
        <div class="ni_block_body"{{ collapsed ? ' style="opacity: 0; height: 0;"' }} data-neo-b="{{ blockId }}.container.body">
            {% if hasTabs %}
                <div class="ni_block_content" data-neo-b="{{ blockId }}.container.content">
                    {# Get the HTML, and replace the child blocks UI element placeholder with actual child blocks #}
                    {# Done like this so we can use `createForm()` without repeatedly namespacing the child blocks #}
                    {% set renderedForm %}
                        {% namespace baseInputName %}
                            {{ block.getFieldLayout().createForm(block, static).render()|raw }}
                        {% endnamespace %}
                    {% endset %}
                    {% set splitOnChildBlocks = renderedForm|split('<div data-neo-child-blocks-ui-element="' ~ blockId ~ '" data-layout-element="') %}
                    {{ splitOnChildBlocks[0]|raw }}
                    {% if splitOnChildBlocks|length > 1 %}
                        {% set splitAfterChildBlocks = splitOnChildBlocks[1]|split('"></div>', 2) %}
                        {% include 'neo/child-blocks' with { block, handle, static, uid: splitAfterChildBlocks[0] } %}
                        {{ splitAfterChildBlocks[1]|raw }}
                    {% endif %}
                </div>
            {% endif %}
            {% if isParent and not type.hasChildBlocksUiElement() %}
                <div class="ni_block_children" data-neo-b="{{ blockId }}.container.children">
                    <div class="ni_blocks" data-neo-b="{{ blockId }}.container.blocks">
                        {% for child in block.children.status(null).all() %}
                            {% include 'neo/block' with { handle, block: child, static } only %}
                        {% endfor %}
                    </div>

                    {% if not static %}
                        <div data-neo-b="{{ blockId }}.container.buttons" class="hidden"></div>
                        <div data-neo-b="{{ blockId }}.container.childrenWarnings" class="hidden">
                            <p class="first warning with-icon">{{ "This Neo field's maximum number of levels has been reached, so no child blocks can be added here."|t('neo') }}</p>
                        </div>
                    {% endif %}
                </div>
            {% endif %}
        </div>
    {% endif %}
    {% if isParent %}
        <div class="ni_block_collapsed-children" data-neo-b="{{ blockId }}.container.collapsedChildren"></div>
    {% endif %}
</div>
